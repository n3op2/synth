#define A 8
#define B 9
#define C 10
#define D 11
#define E 12

int     wave1[] = {};
int wave2[] = {128,131,134,137,140,143,146,149,152,155,158,162,165,167,170,173,176,179,182,185,188,190,193,196,198,201,203,206,208,211,213,215,218,220,222,224,226,228,230,232,234,235,237,238,240,241,243,244,245,246,248,249,250,250,251,252,253,253,254,254,254,255,255,255,255,255,255,255,254,254,254,253,253,252,251,250,250,249,248,246,245,244,243,241,240,238,237,235,234,232,230,228,226,224,222,220,218,215,213,211,208,206,203,201,198,196,193,190,188,185,182,179,176,173,170,167,165,162,158,155,152,149,146,143,140,137,134,131,128,124,121,118,115,112,109,106,103,100,97,93,90,88,85,82,79,76,73,70,67,65,62,59,57,54,52,49,47,44,42,40,37,35,33,31,29,27,25,23,21,20,18,17,15,14,12,11,10,9,7,6,5,5,4,3,2,2,1,1,1,0,0,0,0,0,0,0,1,1,1,2,2,3,4,5,5,6,7,9,10,11,12,14,15,17,18,20,21,23,25,27,29,31,33,35,37,40,42,44,47,49,52,54,57,59,62,65,67,70,73,76,79,82,85,88,90,93,97,100,103,106,109,112,115,118,121,124};
int wave3[] = {171,232,31,74,194,83,49,230,217,101,52,74,216,47,45,13,4,71,95,195,39,122,93,165,76,234,112,46,19,107,55,83,134,147,76,98,38,97,25,53,58,87,198,239,77,141,132,198,117,83,93,251,169,237,131,166,93,192,209,13,199,144,26,61,76,125,15,118,244,65,90,103,78,70,111,0,118,252,221,217,44,234,56,132,84,139,252,183,54,192,212,20,253,215,80,212,45,234,49,179,24,157,139,251,70,114,65,95,147,51,59,31,193,105,17,241,105,102,53,130,145,249,228,124,126,133,5,245,115,209,250,45,106,230,99,84,102,102,112,36,56,86,80,136,79,247,133,169,173,10,108,114,249,3,170,212,56,197,30,172,88,160,31,166,230,177,240,174,163,175,48,171,171,36,220,169,253,14,116,158,56,76,95,83,69,103,141,209,235,203,26,4,76,222,148,132,92,224,11,122,134,50,92,13,127,105,244,1,180,114,253,187,182,132,211,119,112,200,68,214,222,217,235,39,97,63,125,60,93,189,137,149,117,221,94,182,140,255,94,0,254,60,157,144,43,42,61,43,98,193,131,142,234,29,6,251};


int currentStep = 0;
int c = 0;
bool playing = false;
bool recording = false;
int steps[] = { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 };
bool setting = false;

unsigned short int led_matrix[16][10] = {
  // PIN / STATE
  { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 }, // 1
  { 1, 0, 1, 1, 0, 0, 0, 0, 0, 0 }, // 2
  { 1, 1, 0, 0, 1, 0, 0, 0, 0, 0 }, // 3
  { 1, 0, 0, 0, 1, 1, 0, 0, 0, 0 }, // 4
  { 1, 1, 0, 0, 0, 0, 1, 0, 0, 0 }, // 5
  { 1, 0, 0, 0, 0, 0, 1, 1, 0, 0 }, // 6
  { 1, 1, 0, 0, 0, 0, 0, 0, 1, 0 }, // 7
  { 1, 0, 0, 0, 0, 0, 0, 0, 1, 1 }, // 8
  { 0, 0, 1, 1, 1, 0, 0, 0, 0, 0 }, // 9
  { 0, 0, 1, 0, 1, 1, 0, 0, 0, 0 }, // 10
  { 0, 0, 1, 1, 0, 0, 1, 0, 0, 0 }, // 11
  { 0, 0, 1, 0, 0, 0, 1, 1, 0, 0 }, // 12
  { 0, 0, 1, 1, 0, 0, 0, 0, 1, 0 }, // 13
  { 0, 0, 1, 0, 0, 0, 0, 0, 1, 1 }, // 14
  { 0, 0, 0, 0, 1, 1, 1, 0, 0, 0 }, // 15
  { 0, 0, 0, 0, 1, 0, 1, 1, 0, 0 }, // 16
};

void showLed(int id) {
  pinMode(A, led_matrix[id][0]);
  pinMode(B, led_matrix[id][2]);
  pinMode(C, led_matrix[id][4]);
  pinMode(D, led_matrix[id][6]);
  pinMode(E, led_matrix[id][8]);
  digitalWrite(A, led_matrix[id][1]);
  digitalWrite(B, led_matrix[id][3]);
  digitalWrite(C, led_matrix[id][5]);
  digitalWrite(D, led_matrix[id][7]);
  digitalWrite(E, led_matrix[id][9]);
}

void setup() {
  Serial.begin(9600);

  cli();//stop interrupts

  pinMode(13, OUTPUT);
  pinMode(14, OUTPUT);
  pinMode(15, OUTPUT);
  pinMode(20, OUTPUT);
  pinMode(16, OUTPUT);
  pinMode(17, OUTPUT);
  pinMode(18, INPUT);
  pinMode(19, INPUT);


  DDRD = 0xFF;//port d (digital pins 0-7) all outputs

  TCCR2A = 0;// set entire TCCR2A register to 0
  TCCR2B = 0;// same for TCCR2B
  TCNT2  = 0;//initialize counter value to 0
  // --- mmmm?
  // trigger = 4us 16Mhz / prescaler
  // note = note_hz / 256 / trigger
  OCR2A = 16;
  TCCR2A |= B00000010;
  TCCR2B |= B00000010;
  TIMSK2 |= B00000010;

  sei();
}

ISR(TIMER2_COMPA_vect) {
  TCNT2 = 0;
  if (playing || recording) PORTD = wave2[c];
  if (c == 255) c = 0;
  else c++;
}

void loop() {
  if (digitalRead(18) > 0 && !setting) playing = !playing;

  if (digitalRead(19) > 0) {
    if (!playing) {
      recording = true;
    }
    delay(30);
    playing = false;
    digitalWrite(16, LOW);
  }

  record();
  play();
}

void record() {
  if (!recording) return;
  digitalWrite(16, LOW);
  digitalWrite(17, HIGH);
  setting = true;
  short int current = 0;

  while(current + 1 <= sizeof(steps) / sizeof(steps[0])) {
    showLed(current);
    int hz = analogRead(1) / 3;
    Serial.print(hz);
    if (digitalRead(19) > 0 && current != 0) {
      steps[current] = 666;
      current++;
      digitalWrite(16, HIGH);
    } else if (digitalRead(18) > 0) {
      steps[current] = hz;
      current++;
      digitalWrite(16, HIGH);
    }
    OCR2A = hz;
    delay(300);
    digitalWrite(16, LOW);
  }

  setting = false;
  recording = false;

}

void play() {
    if (!playing) return;
    digitalWrite(16, HIGH);
    digitalWrite(17, LOW);
    if (currentStep >= (sizeof(steps) / sizeof(steps[0]))) {
      currentStep = 0;
    }

    TCNT2 = 0;
    int step = steps[currentStep];
    Serial.print("\n step: ");
    Serial.print(step);
    Serial.print("\n currentStep: ");
    Serial.print(currentStep);
    if (step == 666) TCCR2B = 0;
    OCR2A = step;
    delay(110);
    TCCR2B = 0;
    delay(10);
    TCCR2B |= B00000010;
    currentStep++;
    showLed(currentStep);
}


